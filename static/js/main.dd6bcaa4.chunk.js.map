{"version":3,"sources":["styles/App.module.css","components/Cell.tsx","components/Head.tsx","components/Table.tsx","selectors/newsSelectors.ts","api.ts","redux/reducers/newsReducer.ts","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx","styles/Table.module.css"],"names":["module","exports","Cell","url","children","withMobileHide","className","styles","cell","mobileHidden","onClick","length","window","location","href","style","cursor","color","Head","head","Table","rowsData","headNames","headsWithSort","cellUrls","columnWidths","columnsWithMobileHide","mobileSortBtnData","sortFunctions","React","useState","thisRowsData","setThisRowsData","sortOrdersRef","useRef","map","_","useEffect","onHeadClick","useCallback","headIdx","sortOrder","current","newRowsData","sort","a","b","param1","param2","localeCompare","reverse","idx","heads","useMemo","hName","includes","width","rows","thisRowData","rowIdx","row","data","table","sortBtnWrapper","sortBtn","sortedColumn","name","memo","getLoadingNews","state","loadingNews","getNews","newsData","getErrorMessage","errorMessage","instance","axios","create","baseURL","newsAPI","page","get","then","res","initState","SET_NEWS","SET_LOADING_NEWS","SET_ERROR_MESSAGE","setLoadingNews","isLoadingNews","type","setErrorMessage","message","errorMsg","newsReducer","action","connect","news","loadingNewsErrorMsg","fetchNews","dispatch","catch","err","finally","newsPageCount","setNewsPageCount","observableNodeRef","observerRef","tableWrapperRef","observableNode","observer","IntersectionObserver","isIntersecting","prev","threshold","observe","unobserve","n","time_ago","title","domain","sortDateColumn","timeA","Number","substring","indexOf","timeB","includesSingle","getPriority","priorityA","priorityB","tableWrapper","ref","loader","id","observableElement","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.dd6bcaa4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__1zI64\",\"tableWrapper\":\"App_tableWrapper__1PEH0\",\"loader\":\"App_loader__1a8kr\",\"errorMsg\":\"App_errorMsg__2fuVX\",\"observableElement\":\"App_observableElement__9Xcz5\"};","import React from \"react\";\nimport styles from \"./../styles/Table.module.css\";\n\ninterface ICell {\n  url?: string;\n  withMobileHide?: boolean;\n}\n\nconst Cell: React.FC<ICell> = ({ url = \"\", children, withMobileHide }) => {\n  const handleClick = () => {\n    if (url.length) {\n      window.location.href = url;\n    }\n  }\n\n  return (\n    <div\n      className={`${styles.cell} ${withMobileHide ? styles.mobileHidden : \"\"}`}\n      onClick={handleClick}\n      style={{\n        cursor: url.length ? \"pointer\" : \"default\",\n        color: url.length ? \"blue\" : \"black\"\n      }}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default Cell;","import React, { CSSProperties } from \"react\";\nimport styles from \"./../styles/Table.module.css\";\n\ninterface IHead {\n  style?: CSSProperties\n  onClick?: () => any;\n  withMobileHide?: boolean;\n}\n\nconst Head: React.FC<IHead> = ({\n  children,\n  style = {},\n  withMobileHide = false,\n  onClick\n}) => {\n  return (\n    <div \n      className={`${styles.head} ${withMobileHide ? styles.mobileHidden : \"\"}`} \n      style={style}\n      onClick={() => {\n        if (onClick) onClick();\n      }}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default Head;","import React from \"react\";\nimport styles from \"./../styles/Table.module.css\";\nimport Cell from \"./Cell\";\nimport Head from \"./Head\";\n\ninterface ITable {\n  rowsData: Array<any[]>;\n  headNames: Array<string>;\n  cellUrls?: Array<string[]>;\n  headsWithSort?: Array<string>;\n  sortFunctions?: Array<(a: any, b: any) => number>;\n  columnWidths?: Array<string>;\n  columnsWithMobileHide?: Array<number>;\n  mobileSortBtnData?: {\n    name: string;\n    sortedColumn: number;\n  } | null;\n}\n\nconst Table = ({\n  rowsData,\n  headNames,\n  headsWithSort = [],\n  cellUrls = [],\n  columnWidths = [],\n  columnsWithMobileHide = [],\n  mobileSortBtnData = null,\n  sortFunctions\n}: ITable) => {\n  const [thisRowsData, setThisRowsData] = React.useState(rowsData);\n  const sortOrdersRef = React.useRef<Array<\"ascending\" | \"descending\">>(headNames.map(_ => \"ascending\"))\n\n  React.useEffect(() => {\n    setThisRowsData(rowsData);\n  }, [rowsData])\n\n  const onHeadClick = React.useCallback((headIdx: number) => {\n    const sortOrder = sortOrdersRef.current[headIdx];\n    const newRowsData = [...rowsData];\n\n    if (sortFunctions && sortFunctions[headIdx]) {\n      newRowsData.sort((a, b) => {\n        return sortFunctions[headIdx](a[headIdx], b[headIdx]);\n      });\n    } else {\n      newRowsData.sort((a, b) => {\n        const param1 = a[headIdx];\n        const param2 = b[headIdx];\n        if (param1 && param2) {\n          return param1.localeCompare(param2)\n        }\n        if (param1 && !param2) {\n          return 1;\n        }\n        if (!param1 && param2) {\n          return -1;\n        }\n        return 0;\n      });\n    }\n\n    if (sortOrder === \"descending\") {\n      newRowsData.reverse();\n    }\n\n    sortOrdersRef.current = sortOrdersRef.current.map((sortOrder, idx) => {\n      if (idx === headIdx) return sortOrder === \"ascending\" ? \"descending\" : \"ascending\";\n      return sortOrder;\n    })\n\n    setThisRowsData(newRowsData);\n  }, [rowsData, sortFunctions])\n\n  const heads = React.useMemo(() => {\n    return headNames.map((hName, idx) => {\n      return (\n        <Head\n          key={idx}\n          onClick={() => onHeadClick(idx)}\n          withMobileHide={columnsWithMobileHide.includes(idx)}\n          style={{\n            width: columnWidths[idx] ? columnWidths[idx] : \"auto\",\n            cursor: headsWithSort.includes(hName) ? \"pointer\" : \"default\"\n          }}\n        >\n          {hName}\n        </Head>\n      )\n    });\n  }, [headNames, headsWithSort, columnsWithMobileHide, columnWidths, onHeadClick]);\n\n  const rows = React.useMemo(() => {\n    return thisRowsData.map((thisRowData, rowIdx) => {\n      return (\n        <div className={styles.row} key={rowIdx}>\n          {\n            thisRowData.map((data: any, idx) => (\n              <Cell \n                url={(cellUrls[idx] && cellUrls[idx][rowIdx]) ? cellUrls[idx][rowIdx] : \"\"}\n                key={idx}\n                withMobileHide={columnsWithMobileHide.includes(idx)}\n              >\n                {data}\n              </Cell>\n            ))\n          }\n        </div>\n      )\n    })\n  }, [thisRowsData, cellUrls, columnsWithMobileHide]);\n\n  return (\n    <div className={styles.table}>\n      <div className={styles.row}>{heads}</div>\n      {rows}\n      {\n        mobileSortBtnData &&\n        <div className={styles.sortBtnWrapper}>\n          <button \n            className={styles.sortBtn} \n            onClick={() => onHeadClick(mobileSortBtnData.sortedColumn)}\n          >\n            {mobileSortBtnData.name}\n          </button>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default React.memo(Table);","import { INewsReducerState } from \"../redux/reducers/reducerInterfaces\";\n\nexport const getLoadingNews = (state: INewsReducerState) => state.loadingNews;\n\nexport const getNews = (state: INewsReducerState) => state.newsData;\n\nexport const getErrorMessage = (state: INewsReducerState) => state.errorMessage;","import axios from \"axios\"\n\nconst instance = axios.create({\n  baseURL: \"https://api.hnpwa.com/v0/\"\n})\n\nexport const newsAPI = {\n  getByPage(page: number) {\n    return instance.get(`/news/${page}.json`).then(res => res.data);\n  }\n}","import { AxiosError } from \"axios\";\nimport { newsAPI } from \"../../api\";\nimport { INews } from \"../../interfaces\";\nimport { INewsReducerState } from \"./reducerInterfaces\";\n\nconst initState: INewsReducerState = {\n  newsData: [],\n  loadingNews: false,\n  errorMessage: \"\"\n}\n\nconst SET_NEWS = \"SET_NEWS\";\nconst SET_LOADING_NEWS = \"SET_LOADING_NEWS\";\nconst SET_ERROR_MESSAGE = \"SET_ERROR_MESSAGE\";\n\nconst newsReducer = (state: INewsReducerState = initState, action: any): INewsReducerState => {\n  switch(action.type) {\n    case SET_NEWS:\n      return { ...state, newsData: [...state.newsData, ...action.newsData] }\n\n    case SET_LOADING_NEWS:\n      return { ...state, loadingNews: action.isLoadingNews }\n\n    case SET_ERROR_MESSAGE:\n      return { ...state, errorMessage: action.errorMsg }\n\n    default:\n      return { ...state }\n  }\n}\n\nconst setNews = (newsData: Array<INews>) => ({ type: SET_NEWS, newsData })\nconst setLoadingNews = (isLoadingNews: boolean) => ({ type: SET_LOADING_NEWS, isLoadingNews })\nconst setErrorMessage = (message: string) => ({ type: SET_ERROR_MESSAGE, errorMsg: message })\n\nexport const fetchNews = (page: number) => (dispatch: any) => {\n  dispatch(setLoadingNews(true));\n\n  newsAPI.getByPage(page)\n    .then((data: Array<INews>) => {\n      dispatch(setNews(data));\n      dispatch(setErrorMessage(\"\"));\n    })\n    .catch((err: AxiosError) => dispatch(setErrorMessage(err.message)))\n    .finally(() => dispatch(setLoadingNews(false)))\n}\n\nexport default newsReducer;","import { connect } from \"react-redux\";\nimport Table from \"./components/Table\";\nimport { getErrorMessage, getLoadingNews, getNews } from \"./selectors/newsSelectors\";\nimport styles from \"./styles/App.module.css\";\nimport { fetchNews } from \"./redux/reducers/newsReducer\";\nimport React from \"react\";\nimport { INews, IReducers } from \"./interfaces\";\n\ninterface IApp {\n  news: Array<INews>;\n  loadingNews: boolean;\n  loadingNewsErrorMsg: string;\n  fetchNews: (page: number) => void;\n}\n\nconst App = ({ news, loadingNews, loadingNewsErrorMsg, fetchNews }: IApp) => {\n  const [newsPageCount, setNewsPageCount] = React.useState(1);\n  const observableNodeRef = React.useRef<HTMLDivElement>(null);\n  const observerRef = React.useRef<IntersectionObserver>();\n  const tableWrapperRef = React.useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    const observableNode = observableNodeRef.current;\n    const observer = new IntersectionObserver(([target]) => {\n      if (target.isIntersecting) {\n        setNewsPageCount(prev => prev + 1);\n      }\n    }, { threshold: 1 });\n\n    observerRef.current = observer;\n\n    if (observableNode) {\n      observer.observe(observableNode);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (newsPageCount > 10) {\n      if (observerRef.current && observableNodeRef.current) {\n        observerRef.current.unobserve(observableNodeRef.current);\n      }\n\n      return;\n    }\n\n    fetchNews(newsPageCount);\n  }, [fetchNews, newsPageCount]);\n\n  const rowsData = React.useMemo(() => {\n    return news.map(n => [n.time_ago, n.title, n.domain]);\n  }, [news])\n\n  const cellUrls = React.useMemo(() => {\n    return news.map(n => n.url);\n  }, [news]);\n\n  const sortDateColumn = React.useCallback((a: string, b: string) => {\n    let timeA = Number(a.substring(0, a.indexOf(\" \")));\n    let timeB = Number(b.substring(0, b.indexOf(\" \")));\n\n    const includesSingle = (data: string) => {\n      return data.includes(\"a day\")\n        || data.includes(\"an hour\")\n        || data.includes(\"a minute\")\n        || data.includes(\"a second\")\n    }\n\n    if (includesSingle(a)) timeA = 1;\n    if (includesSingle(b)) timeB = 1;\n\n    const getPriority = (data: string) => {\n      return data.includes(\"year\") ? 6\n        : data.includes(\"week\") ? 5\n        : data.includes(\"day\") ? 4\n        : data.includes(\"hour\") ? 3\n        : data.includes(\"minute\") ? 2\n        : data.includes(\"second\") && 1 \n    }\n\n    const priorityA = getPriority(a);\n    const priorityB = getPriority(b);\n\n    if (priorityA > priorityB) return 1;\n    if (priorityB > priorityA) return -1;\n\n    return timeA - timeB;\n  }, []);\n\n  return (\n    <div className={styles.page}>\n      {\n        news &&\n        <div className={styles.tableWrapper} ref={tableWrapperRef}>\n          <Table\n            rowsData={rowsData}\n            headNames={[\"Time added\", \"Title\", \"Domain\"]}\n            headsWithSort={[\"Time added\", \"Title\", \"Domain\"]}\n            sortFunctions={[sortDateColumn]}\n            columnWidths={[\"15%\", \"auto\", \"auto\"]}\n            columnsWithMobileHide={[0, 2]}\n            cellUrls={[[], cellUrls, []]}\n            mobileSortBtnData={{\n              name: \"Sort by date\",\n              sortedColumn: 0,\n            }}\n          />\n        </div>\n      }\n      {\n        loadingNews\n        ? <h3 className={styles.loader}>Loading news...</h3>\n        : loadingNewsErrorMsg.length > 0\n        && <h3 className={styles.errorMsg}>{loadingNewsErrorMsg}</h3>\n      }    \n      <div id={styles.observableElement} ref={observableNodeRef}></div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: IReducers) => {\n  return {\n    news: getNews(state.news),\n    loadingNews: getLoadingNews(state.news),\n    loadingNewsErrorMsg: getErrorMessage(state.news),\n  }\n}\n\nexport default connect(mapStateToProps, { fetchNews })(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { IReducers } from \"../interfaces\";\nimport newsReducer from \"./reducers/newsReducer\";\n\nconst reducers = combineReducers<IReducers>({\n  news: newsReducer\n});\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { HashRouter, Route } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <Route exact path=\"/\" render={() => <App />} />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__1ozS8\",\"row\":\"Table_row__ToSOf\",\"cell\":\"Table_cell__4C-Dt\",\"head\":\"Table_head__1diNJ\",\"sortBtnWrapper\":\"Table_sortBtnWrapper__1LLVw\",\"sortBtn\":\"Table_sortBtn__295Vl\",\"mobileHidden\":\"Table_mobileHidden__2Iq6H\"};"],"sourceRoot":""}